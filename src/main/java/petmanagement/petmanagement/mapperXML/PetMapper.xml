<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="petmanagement.petmanagement.mapper.PetMapper" >
  <resultMap id="BaseResultMap" type="petmanagement.petmanagement.entity.Pet" >
    <id column="petid" property="petid" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="DECIMAL" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="color" property="color" jdbcType="VARCHAR" />
    <result column="statu" property="statu" jdbcType="VARCHAR" />
    <result column="hubid" property="hubid" jdbcType="INTEGER" />
    <result column="adopterid" property="adopterid" jdbcType="INTEGER" />
  </resultMap>

  <sql id="Base_Column_List" >
    petid, type, age, sex, color, statu, hubid, adopterid
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from pet
    where petid = #{petid,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from pet
    where petid = #{petid,jdbcType=INTEGER}
  </delete>


  <insert id="insert" parameterType="petmanagement.petmanagement.entity.Pet" >
    insert into pet (petid, type, age, 
      sex, color, statu, 
      hubid, adopterid)
    values (#{petid,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, #{age,jdbcType=DECIMAL}, 
      #{sex,jdbcType=VARCHAR}, #{color,jdbcType=VARCHAR}, #{statu,jdbcType=VARCHAR}, 
      #{hubid,jdbcType=INTEGER}, #{adopterid,jdbcType=INTEGER})
  </insert>

  <!--还可以，这样分得很清楚-->
  <insert id="insertSelective" parameterType="petmanagement.petmanagement.entity.Pet" >
    insert into pet
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="petid != null" >
        petid,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="color != null" >
        color,
      </if>
      <if test="statu != null" >
        statu,
      </if>
      <if test="hubid != null" >
        hubid,
      </if>
      <if test="adopterid != null" >
        adopterid,
      </if>
--       trim 属性
--       prefix：前缀覆盖并增加其内容
--       suffix：后缀覆盖并增加其内容
--       prefixOverrides：前缀判断的条件
--       suffixOverrides：后缀判断的条件
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="petid != null" >
        #{petid,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=DECIMAL},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="color != null" >
        #{color,jdbcType=VARCHAR},
      </if>
      <if test="statu != null" >
        #{statu,jdbcType=VARCHAR},
      </if>
      <if test="hubid != null" >
        #{hubid,jdbcType=INTEGER},
      </if>
      <if test="adopterid != null" >
        #{adopterid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>


  <update id="updateByPrimaryKeySelective" parameterType="petmanagement.petmanagement.entity.Pet" >
    update pet
    <set >
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=DECIMAL},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="color != null" >
        color = #{color,jdbcType=VARCHAR},
      </if>
      <if test="statu != null" >
        statu = #{statu,jdbcType=VARCHAR},
      </if>
      <if test="hubid != null" >
        hubid = #{hubid,jdbcType=INTEGER},
      </if>
      <if test="adopterid != null" >
        adopterid = #{adopterid,jdbcType=INTEGER},
      </if>
    </set>
    where petid = #{petid,jdbcType=INTEGER}
  </update>


  <update id="updateByPrimaryKey" parameterType="petmanagement.petmanagement.entity.Pet" >
    update pet
    set type = #{type,jdbcType=VARCHAR},
      age = #{age,jdbcType=DECIMAL},
      sex = #{sex,jdbcType=VARCHAR},
      color = #{color,jdbcType=VARCHAR},
      statu = #{statu,jdbcType=VARCHAR},
      hubid = #{hubid,jdbcType=INTEGER},
      adopterid = #{adopterid,jdbcType=INTEGER}
    where petid = #{petid,jdbcType=INTEGER}
  </update>
</mapper>